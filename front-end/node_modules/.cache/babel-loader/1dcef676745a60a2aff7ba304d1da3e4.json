{"ast":null,"code":"import _objectSpread from \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/SubmissionPage/SubmissionBuild/SubmissionForm.js\";\nimport React, { Component } from \"react\";\nexport default class SubmissionForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            business = _event$target.business;\n      this.setState(_objectSpread({}, this.state, {\n        submission: _objectSpread({}, this.state.submission, {\n          [business]: value\n        })\n      }));\n    };\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      submission: {\n        business: \"\",\n        note: \"\"\n      }\n    }; // bind context to methods\n\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  /**\n   * Handle form input field changes & update the state\n   */\n\n\n  /**\n   * Form submit handler\n   */\n  onSubmit(e) {\n    // prevent default form submission\n    e.preventDefault();\n\n    if (!this.isFormValid()) {\n      this.setState({\n        error: \"All fields are required.\"\n      });\n      return;\n    } // loading status and clear error\n\n\n    this.setState({\n      error: \"\",\n      loading: true\n    }); // persist the comments on server\n\n    let submission = this.state.submission;\n    fetch(\"http://localhost:7778\", {\n      method: \"post\",\n      body: JSON.stringify(submission)\n    }).then(res => res.json()).then(res => {\n      if (res.error) {\n        this.setState({\n          loading: false,\n          error: res.error\n        });\n      } else {\n        // add time return from api and push comment to parent state\n        submission.time = res.time;\n        this.props.addSubmission(submission); // clear the message box\n\n        this.setState({\n          loading: false,\n          submission: _objectSpread({}, submission, {\n            business: \"\",\n            note: \"\"\n          })\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        error: \"Something went wrong while submitting form.\",\n        loading: false\n      });\n    });\n  }\n  /**\n   * Simple validation\n   */\n\n\n  isFormValid() {\n    return this.state.submission.business !== \"\" && this.state.submission.note !== \"\";\n  }\n\n  renderError() {\n    return this.state.error ? React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.error) : null;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleFieldChange,\n      value: this.state.submission.business,\n      className: \"form-control\",\n      placeholder: \"BUSINESS NAME\",\n      business: \"business\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.handleFieldChange,\n      value: this.state.submission.note,\n      className: \"form-control\",\n      placeholder: \"TELL US WHY THIS WOULD BE A GOOD BUSINESS FOR US TO FEATURE\",\n      business: \"note\",\n      rows: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), this.renderError(), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: this.state.loading,\n      className: \"submission-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"COMMENT\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/SubmissionPage/SubmissionBuild/SubmissionForm.js"],"names":["React","Component","SubmissionForm","constructor","props","handleFieldChange","event","target","value","business","setState","state","submission","loading","error","note","bind","onSubmit","e","preventDefault","isFormValid","fetch","method","body","JSON","stringify","then","res","json","time","addSubmission","catch","err","renderError","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class SubmissionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      error: \"\",\n\n      submission: {\n        business: \"\",\n        note: \"\"\n      }\n    };\n\n    // bind context to methods\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Handle form input field changes & update the state\n   */\n  handleFieldChange = event => {\n    const { value, business } = event.target;\n\n    this.setState({\n      ...this.state,\n      submission: {\n        ...this.state.submission,\n        [business]: value\n      }\n    });\n  };\n\n  /**\n   * Form submit handler\n   */\n  onSubmit(e) {\n    // prevent default form submission\n    e.preventDefault();\n\n    if (!this.isFormValid()) {\n      this.setState({ error: \"All fields are required.\" });\n      return;\n    }\n\n    // loading status and clear error\n    this.setState({ error: \"\", loading: true });\n\n    // persist the comments on server\n    let { submission } = this.state;\n    fetch(\"http://localhost:7778\", {\n      method: \"post\",\n      body: JSON.stringify(submission)\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          this.setState({ loading: false, error: res.error });\n        } else {\n          // add time return from api and push comment to parent state\n          submission.time = res.time;\n          this.props.addSubmission(submission);\n\n          // clear the message box\n          this.setState({\n            loading: false,\n            submission: { ...submission, business: \"\", note: \"\" }\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          error: \"Something went wrong while submitting form.\",\n          loading: false\n        });\n      });\n  }\n\n  /**\n   * Simple validation\n   */\n  isFormValid() {\n    return this.state.submission.business !== \"\" && this.state.submission.note !== \"\";\n  }\n\n  renderError() {\n    return this.state.error ? (\n      <div className=\"alert alert-danger\">{this.state.error}</div>\n    ) : null;\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <form method=\"post\" onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <input\n              onChange={this.handleFieldChange}\n              value={this.state.submission.business}\n              className=\"form-control\"\n              placeholder=\"BUSINESS NAME\"\n              business=\"business\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              onChange={this.handleFieldChange}\n              value={this.state.submission.note}\n              className=\"form-control\"\n              placeholder=\"TELL US WHY THIS WOULD BE A GOOD BUSINESS FOR US TO FEATURE\"\n              business=\"note\"\n              rows=\"5\"\n            />\n          </div>\n\n          {this.renderError()}\n\n          <div className=\"form-group\">\n            <button disabled={this.state.loading} className=\"submission-button\">\n              COMMENT\n            </button>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}