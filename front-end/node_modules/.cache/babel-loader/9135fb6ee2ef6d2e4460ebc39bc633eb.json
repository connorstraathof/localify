{"ast":null,"code":"var _jsxFileName = \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/ShopsAll/Drinks/Map.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { InfoWindow, Marker } from 'google-maps-react';\nimport { RichText } from 'prismic-reactjs';\nconst mapStyles = {\n  width: '60%',\n  height: '60%'\n};\nexport class ShopMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doc: null,\n      notFound: false\n    };\n\n    if (props.prismicCtx) {\n      this.fetchPage(props);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar(); // We fetch the page only after props have changed and PrismicCtx is no longer null\n\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props);\n    }\n  }\n\n  fetchPage(props) {\n    // We are using the function to get a document by its uid\n    return props.prismicCtx.api.getByUID('drinks_post', props.match.params.uid, {}, (err, doc) => {\n      if (doc) {\n        // We put the retrieved content in the state as a doc variable\n        this.setState({\n          doc\n        });\n      } else {\n        // We changed the state to display error not found if no matched doc\n        this.setState({\n          notFound: !doc\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 12.5,\n      style: mapStyles,\n      initialCenter: {\n        lat: 49.246292,\n        lng: -123.116226\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'Kenyatta International Convention Centre',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.locations.location,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.name))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCtKMlz5bz3VXsNVvtf8Ivq8H-_vEuuY_w'\n})(ShopMap);","map":{"version":3,"sources":["/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/ShopsAll/Drinks/Map.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","RichText","mapStyles","width","height","ShopMap","constructor","props","state","doc","notFound","prismicCtx","fetchPage","componentDidUpdate","prevProps","toolbar","api","getByUID","match","params","uid","err","setState","render","google","lat","lng","onMarkerClick","locations","location","showingInfoWindow","onClose","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,OAAO,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAErCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,IADM;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;;AAKA,QAAIH,KAAK,CAACI,UAAV,EAAsB;AACpB,WAAKC,SAAL,CAAeL,KAAf;AACD;AACF;;AACDM,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,SAAKP,KAAL,CAAWI,UAAX,CAAsBI,OAAtB,GAD4B,CAE5B;;AACA,QAAI,CAACD,SAAS,CAACH,UAAf,EAA2B;AACzB,WAAKC,SAAL,CAAe,KAAKL,KAApB;AACD;AACF;;AAEDK,EAAAA,SAAS,CAACL,KAAD,EAAQ;AACf;AACA,WAAOA,KAAK,CAACI,UAAN,CAAiBK,GAAjB,CAAqBC,QAArB,CAA8B,aAA9B,EAA6CV,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,GAAhE,EAAqE,EAArE,EAAyE,CAACC,GAAD,EAAMZ,GAAN,KAAc;AAC5F,UAAIA,GAAJ,EAAS;AACP;AACA,aAAKa,QAAL,CAAc;AAAEb,UAAAA;AAAF,SAAd;AACD,OAHD,MAGO;AACL;AACA,aAAKa,QAAL,CAAc;AAAEZ,UAAAA,QAAQ,EAAE,CAACD;AAAb,SAAd;AACD;AACF,KARM,CAAP;AASD;;AACDc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWiB,MADrB;AAEE,MAAA,IAAI,EAAE,IAFR;AAGE,MAAA,KAAK,EAAEtB,SAHT;AAIE,MAAA,aAAa,EAAE;AACbuB,QAAAA,GAAG,EAAE,SADQ;AAEbC,QAAAA,GAAG,EAAE,CAAC;AAFO,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAqC,MAAA,IAAI,EAAE,0CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWoB,SAAX,CAAqBC,QAD/B;AAEE,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWsB,iBAFtB;AAGE,MAAA,OAAO,EAAE,KAAKC,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKvB,KAAL,CAAWwB,IAAhB,CADF,CALF,CAVF,CADF;AAsBD;;AAxDoC;AA2DvC,eAAelC,gBAAgB,CAAC;AAC9BmC,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZ5B,OAFY,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper } from 'google-maps-react'\nimport { InfoWindow, Marker } from 'google-maps-react'\nimport { RichText } from 'prismic-reactjs'\n\nconst mapStyles = {\n  width: '60%',\n  height: '60%'\n}\n\nexport class ShopMap extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      doc: null,\n      notFound: false\n    }\n\n    if (props.prismicCtx) {\n      this.fetchPage(props)\n    }\n  }\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar()\n    // We fetch the page only after props have changed and PrismicCtx is no longer null\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props)\n    }\n  }\n\n  fetchPage(props) {\n    // We are using the function to get a document by its uid\n    return props.prismicCtx.api.getByUID('drinks_post', props.match.params.uid, {}, (err, doc) => {\n      if (doc) {\n        // We put the retrieved content in the state as a doc variable\n        this.setState({ doc })\n      } else {\n        // We changed the state to display error not found if no matched doc\n        this.setState({ notFound: !doc })\n      }\n    })\n  }\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={12.5}\n        style={mapStyles}\n        initialCenter={{\n          lat: 49.246292,\n          lng: -123.116226\n        }}\n      >\n        <Marker onClick={this.onMarkerClick} name={'Kenyatta International Convention Centre'} />\n        <InfoWindow\n          marker={this.state.locations.location}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCtKMlz5bz3VXsNVvtf8Ivq8H-_vEuuY_w'\n})(ShopMap)\n"]},"metadata":{},"sourceType":"module"}