{"ast":null,"code":"var _jsxFileName = \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Search/SearchNext.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledInput from '../Search/styled-copmonent';\nimport '../../Styles/Generic/Generic.css';\n\nclass InputBox extends Component {\n  componentDidMount() {\n    const autoFocus = this.props.autoFocus;\n    /**\n     * Focusses on the input box if the autoFocus prop is true.\n     */\n\n    !!autoFocus && this.input.focus();\n  }\n\n  render() {\n    const _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          onFocus = _this$props.onFocus,\n          inputBoxFontColor = _this$props.inputBoxFontColor,\n          inputBoxBorderColor = _this$props.inputBoxBorderColor,\n          inputBoxFontSize = _this$props.inputBoxFontSize,\n          inputBoxHeight = _this$props.inputBoxHeight;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(StyledInput, {\n      className: \"generic__search\",\n      type: \"text\",\n      placeholder: placeholder,\n      value: value,\n      onChange: onChange,\n      onFocus: onFocus,\n      ref: input => {\n        this.input = input;\n      },\n      inputBoxFontColor: inputBoxFontColor,\n      inputBoxBorderColor: inputBoxBorderColor,\n      inputBoxFontSize: inputBoxFontSize,\n      inputBoxHeight: inputBoxHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nInputBox.propTypes = {\n  /**\n   * placeholder: The placeholder text for the input box.\n   * value: The value of the input box.\n   * onChange: A function which acts as a callback when the input value is changed.\n   * onFocus: A function which acts as a callback when the input is focussed.\n   * inputBoxFontColor: Color of the text in the input box.\n   * inputBoxBorderColor: Color of the border of the input box.\n   * inputBoxFontSize: Size of the font of the input box.\n   * inputBoxHeight: Height of the input box.\n   */\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  inputBoxFontColor: PropTypes.string,\n  inputBoxBorderColor: PropTypes.string,\n  inputBoxFontSize: PropTypes.string,\n  inputBoxHeight: PropTypes.string\n};\nexport default InputBox;","map":{"version":3,"sources":["/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Search/SearchNext.js"],"names":["React","Component","PropTypes","StyledInput","InputBox","componentDidMount","autoFocus","props","input","focus","render","placeholder","value","onChange","onFocus","inputBoxFontColor","inputBoxBorderColor","inputBoxFontSize","inputBoxHeight","propTypes","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,kCAAP;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAsB/BI,EAAAA,iBAAiB,GAAG;AAAA,UACVC,SADU,GACI,KAAKC,KADT,CACVD,SADU;AAGlB;;;;AAGA,KAAC,CAACA,SAAF,IAAe,KAAKE,KAAL,CAAWC,KAAX,EAAf;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAUH,KAAKH,KAVF;AAAA,UAELI,WAFK,eAELA,WAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,OALK,eAKLA,OALK;AAAA,UAMLC,iBANK,eAMLA,iBANK;AAAA,UAOLC,mBAPK,eAOLA,mBAPK;AAAA,UAQLC,gBARK,eAQLA,gBARK;AAAA,UASLC,cATK,eASLA,cATK;AAYP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,WAAD;AACC,MAAA,SAAS,EAAC,iBADX;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAEP,WAHf;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,QAAQ,EAAEC,QALZ;AAME,MAAA,OAAO,EAAEC,OANX;AAOE,MAAA,GAAG,EAAEN,KAAK,IAAI;AACZ,aAAKA,KAAL,GAAaA,KAAb;AACD,OATH;AAUE,MAAA,iBAAiB,EAAEO,iBAVrB;AAWE,MAAA,mBAAmB,EAAEC,mBAXvB;AAYE,MAAA,gBAAgB,EAAEC,gBAZpB;AAaE,MAAA,cAAc,EAAEC,cAblB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAmBD;;AA9D8B;;AAA3Bd,Q,CACGe,S,GAAY;AACjB;;;;;;;;;;AAUAR,EAAAA,WAAW,EAAET,SAAS,CAACkB,MAXN;AAYjBR,EAAAA,KAAK,EAAEV,SAAS,CAACkB,MAZA;AAajBP,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,IAbH;AAcjBP,EAAAA,OAAO,EAAEZ,SAAS,CAACmB,IAdF;AAejBN,EAAAA,iBAAiB,EAAEb,SAAS,CAACkB,MAfZ;AAgBjBJ,EAAAA,mBAAmB,EAAEd,SAAS,CAACkB,MAhBd;AAiBjBH,EAAAA,gBAAgB,EAAEf,SAAS,CAACkB,MAjBX;AAkBjBF,EAAAA,cAAc,EAAEhB,SAAS,CAACkB;AAlBT,C;AAgErB,eAAehB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport StyledInput from '../Search/styled-copmonent'\nimport '../../Styles/Generic/Generic.css'\n\nclass InputBox extends Component {\n  static propTypes = {\n    /**\n     * placeholder: The placeholder text for the input box.\n     * value: The value of the input box.\n     * onChange: A function which acts as a callback when the input value is changed.\n     * onFocus: A function which acts as a callback when the input is focussed.\n     * inputBoxFontColor: Color of the text in the input box.\n     * inputBoxBorderColor: Color of the border of the input box.\n     * inputBoxFontSize: Size of the font of the input box.\n     * inputBoxHeight: Height of the input box.\n     */\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    inputBoxFontColor: PropTypes.string,\n    inputBoxBorderColor: PropTypes.string,\n    inputBoxFontSize: PropTypes.string,\n    inputBoxHeight: PropTypes.string,\n  }\n\n  componentDidMount() {\n    const { autoFocus } = this.props\n\n    /**\n     * Focusses on the input box if the autoFocus prop is true.\n     */\n    !!autoFocus && this.input.focus()\n  }\n\n  render() {\n    const {\n      placeholder,\n      value,\n      onChange,\n      onFocus,\n      inputBoxFontColor,\n      inputBoxBorderColor,\n      inputBoxFontSize,\n      inputBoxHeight,\n    } = this.props\n\n    return (\n      <div>\n      <StyledInput\n       className='generic__search'\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onFocus={onFocus}\n        ref={input => {\n          this.input = input\n        }}\n        inputBoxFontColor={inputBoxFontColor}\n        inputBoxBorderColor={inputBoxBorderColor}\n        inputBoxFontSize={inputBoxFontSize}\n        inputBoxHeight={inputBoxHeight}\n      />\n      </div>\n    )\n  }\n}\n\nexport default InputBox"]},"metadata":{},"sourceType":"module"}