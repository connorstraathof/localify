{"ast":null,"code":"var _jsxFileName = \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Search/Search.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { withRouter } from 'react-router';\nimport queryString from 'query-string';\nimport '../../Styles/Search/Search.css';\nexport default class SearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getLocation() {\n    // this is the best way to get the current search value?\n    let location;\n    this.props.router.listen(routerState => {\n      location = routerState;\n    })(); // immediately unlisten\n\n    return location;\n  }\n\n  componentWillMount() {\n    const _this$getLocation = this.getLocation(),\n          search = _this$getLocation.search;\n\n    this.setState({\n      search: queryString.parse(search).q || ''\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const router = this.props.router;\n\n    const _this$getLocation2 = this.getLocation(),\n          pathname = _this$getLocation2.pathname,\n          search = _this$getLocation2.search;\n\n    const query = queryString.parse(search);\n\n    if (this.state.search) {\n      query.q = this.state.search;\n    } else {\n      delete query.q;\n    }\n\n    const string = queryString.stringify(query);\n    router.push({\n      pathname,\n      search: string ? \"?\".concat(string) : ''\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  render() {\n    const search = this.state.search;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: search,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n} // render() {\n//     return (\n//       <div>\n//         <form id='demo-2' onSubmit={this.submit}>\n//           <input\n//             type='search'\n//             placeholder='Search'\n//             onChange={this.changeTerm}\n//           />\n//           <Button type=\"submit\" bsstyle=\"primary\">Find</Button>\n//         </form>\n//         {this.state.results.length > 0 &&\n//           <Redirect to={{\n//             pathname: '/results',\n//             state: { results: this.state.results }\n//           }}/>\n//         }\n//       </div>\n\nSearchBox.propTypes = {\n  router: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Search/Search.js"],"names":["React","Component","PropTypes","withRouter","queryString","SearchBox","constructor","props","state","search","handleSubmit","bind","handleChange","getLocation","location","router","listen","routerState","componentWillMount","setState","parse","q","event","preventDefault","pathname","query","string","stringify","push","target","value","render","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,gCAAP;AAGA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAK/CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ;AACA,QAAIC,QAAJ;AACA,SAAKP,KAAL,CAAWQ,MAAX,CAAkBC,MAAlB,CAAyBC,WAAW,IAAI;AACtCH,MAAAA,QAAQ,GAAGG,WAAX;AACD,KAFD,IAHY,CAKN;;AACN,WAAOH,QAAP;AACD;;AAEDI,EAAAA,kBAAkB,GAAG;AAAA,8BACA,KAAKL,WAAL,EADA;AAAA,UACXJ,MADW,qBACXA,MADW;;AAEnB,SAAKU,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAEL,WAAW,CAACgB,KAAZ,CAAkBX,MAAlB,EAA0BY,CAA1B,IAA+B;AAAzC,KAAd;AACD;;AAEDX,EAAAA,YAAY,CAACY,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AADkB,UAEVR,MAFU,GAEC,KAAKR,KAFN,CAEVQ,MAFU;;AAAA,+BAGW,KAAKF,WAAL,EAHX;AAAA,UAGVW,QAHU,sBAGVA,QAHU;AAAA,UAGAf,MAHA,sBAGAA,MAHA;;AAIlB,UAAMgB,KAAK,GAAGrB,WAAW,CAACgB,KAAZ,CAAkBX,MAAlB,CAAd;;AACA,QAAI,KAAKD,KAAL,CAAWC,MAAf,EAAuB;AACrBgB,MAAAA,KAAK,CAACJ,CAAN,GAAU,KAAKb,KAAL,CAAWC,MAArB;AACD,KAFD,MAEO;AACL,aAAOgB,KAAK,CAACJ,CAAb;AACD;;AACD,UAAMK,MAAM,GAAGtB,WAAW,CAACuB,SAAZ,CAAsBF,KAAtB,CAAf;AACAV,IAAAA,MAAM,CAACa,IAAP,CAAY;AACVJ,MAAAA,QADU;AAEVf,MAAAA,MAAM,EAAEiB,MAAM,cAAOA,MAAP,IAAkB;AAFtB,KAAZ;AAID;;AAEDd,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAClB,SAAKH,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAEa,KAAK,CAACO,MAAN,CAAaC;AAAvB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCtB,MADD,GACY,KAAKD,KADjB,CACCC,MADD;AAEP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,WAAW,EAAC,WADd;AAEE,MAAA,KAAK,EAAED,MAFT;AAGE,MAAA,QAAQ,EAAE,KAAKG,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AAzD8C,C,CA4DjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7EqBP,S,CACZ2B,S,GAAY;AACjBjB,EAAAA,MAAM,EAAEb,SAAS,CAAC+B,MAAV,CAAiBC;AADR,C","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { withRouter } from 'react-router'\nimport queryString from 'query-string'\nimport '../../Styles/Search/Search.css'\n\n\nexport default class SearchBox extends Component {\n  static propTypes = {\n    router: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { search: '' }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  getLocation() {\n    // this is the best way to get the current search value?\n    let location\n    this.props.router.listen(routerState => {\n      location = routerState\n    })()  // immediately unlisten\n    return location\n  }\n\n  componentWillMount() {\n    const { search } = this.getLocation()\n    this.setState({ search: queryString.parse(search).q || '' })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const { router } = this.props\n    const { pathname, search } = this.getLocation()\n    const query = queryString.parse(search)\n    if (this.state.search) {\n      query.q = this.state.search\n    } else {\n      delete query.q\n    }\n    const string = queryString.stringify(query)\n    router.push({\n      pathname,\n      search: string ? `?${string}` : ''\n    })\n  }\n\n  handleChange(event) {\n    this.setState({ search: event.target.value })\n  }\n\n  render() {\n    const { search } = this.state\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={this.handleChange}/>\n      </form>\n    )\n  }\n}\n\n// render() {\n//     return (\n//       <div>\n//         <form id='demo-2' onSubmit={this.submit}>\n//           <input\n//             type='search'\n//             placeholder='Search'\n//             onChange={this.changeTerm}\n//           />\n//           <Button type=\"submit\" bsstyle=\"primary\">Find</Button>\n//         </form>\n//         {this.state.results.length > 0 &&\n//           <Redirect to={{\n//             pathname: '/results',\n//             state: { results: this.state.results }\n//           }}/>\n//         }\n//       </div>"]},"metadata":{},"sourceType":"module"}