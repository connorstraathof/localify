{"ast":null,"code":"var _jsxFileName = \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Comments/CommentBox.js\";\nimport React, { Component } from 'react';\n\nclass CommentBox extends Component {\n  constructor(props) {\n    super(props);\n    this.addComment = this.addComment.bind(this);\n  }\n\n  addComment(e) {\n    // Prevent the default behaviour of form submit\n    e.preventDefault(); // Get the value of the comment box\n    // and make sure it not some empty strings\n\n    const comment = e.target.elements.comment.value.trim();\n    const name = e.target.elements.name.value.trim(); // Make sure name and comment boxes are filled\n\n    if (name && comment) {\n      const commentObject = {\n        name,\n        comment // Publish comment\n\n        /*global Ably*/\n\n      };\n      const channel = Ably.channels.get('comments');\n      channel.publish('add_comment', commentObject, err => {\n        if (err) {\n          console.log('Unable to publish message; err = ' + err.message);\n        }\n      }); // Clear input fields\n\n      e.target.elements.comment.value = '';\n      e.target.elements.name.value = '';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"FEEDBACK\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      name: \"name\",\n      placeholder: \"Your name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"textarea\",\n      name: \"comment\",\n      placeholder: \"Add a comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Comments/CommentBox.js"],"names":["React","Component","CommentBox","constructor","props","addComment","bind","e","preventDefault","comment","target","elements","value","trim","name","commentObject","channel","Ably","channels","get","publish","err","console","log","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass CommentBox extends Component {\n  constructor(props) {\n    super(props)\n    this.addComment = this.addComment.bind(this)\n  }\n\n  addComment(e) {\n    // Prevent the default behaviour of form submit\n    e.preventDefault()\n\n    // Get the value of the comment box\n    // and make sure it not some empty strings\n    const comment = e.target.elements.comment.value.trim()\n    const name = e.target.elements.name.value.trim()\n\n    // Make sure name and comment boxes are filled\n    if (name && comment) {\n      const commentObject = { name, comment }\n\n      // Publish comment\n      /*global Ably*/\n      const channel = Ably.channels.get('comments')\n      channel.publish('add_comment', commentObject, err => {\n        if (err) {\n          console.log('Unable to publish message; err = ' + err.message)\n        }\n      })\n\n      // Clear input fields\n      e.target.elements.comment.value = ''\n      e.target.elements.name.value = ''\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className='title'>FEEDBACK</h1>\n        <p></p>\n        <form onSubmit={this.addComment}>\n          <div className='field'>\n            <div className='control'>\n              <input type='text' className='input' name='name' placeholder='Your name' />\n            </div>\n          </div>\n          <div className='field'>\n            <div className='control'>\n              <textarea className='textarea' name='comment' placeholder='Add a comment' />\n            </div>\n          </div>\n          <div className='field'>\n            <div className='control'>\n              <button className='button is-primary'>Submit</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default CommentBox\n"]},"metadata":{},"sourceType":"module"}