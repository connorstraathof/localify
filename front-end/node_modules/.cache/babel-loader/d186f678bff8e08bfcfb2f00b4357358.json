{"ast":null,"code":"var _jsxFileName = \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Search/DropDown.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledDropDown from './styled-component';\n\nclass DropDown extends Component {\n  render() {\n    const _this$props = this.props,\n          matchedRecords = _this$props.matchedRecords,\n          onClick = _this$props.onClick,\n          dropDownHoverColor = _this$props.dropDownHoverColor,\n          dropDownBorderColor = _this$props.dropDownBorderColor;\n    return React.createElement(StyledDropDown, {\n      className: \"react-search-box-dropdown\",\n      dropDownHoverColor: dropDownHoverColor,\n      dropDownBorderColor: dropDownBorderColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, matchedRecords.map(record => {\n      return React.createElement(\"li\", {\n        key: record.key,\n        className: \"react-search-box-dropdown-list-item\",\n        onClick: () => onClick(record),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, record.value);\n    })));\n  }\n\n}\n\nDropDown.propTypes = {\n  /**\n   * onClick: A function which acts as a callback when any record is selected. It\n   * is triggered once a dropdown item is clicked.\n   * matchedRecords: An array of matched records.\n   * dropDownHoverColor: Background color on hover of the dropdown list items.\n   * dropDownBorderColor: Border color of the dropdown.\n   */\n  onClick: PropTypes.func,\n  matchedRecords: PropTypes.array,\n  dropDownHoverColor: PropTypes.string,\n  dropDownBorderColor: PropTypes.string\n};\nDropDown.defaultProps = {\n  /**\n   * Set matchedRecords prop as an empty array in case it's not passed.\n   */\n  matchedRecords: []\n};\nexport default DropDown;","map":{"version":3,"sources":["/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/Search/DropDown.js"],"names":["React","Component","PropTypes","StyledDropDown","DropDown","render","props","matchedRecords","onClick","dropDownHoverColor","dropDownBorderColor","map","record","key","value","propTypes","func","array","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAsB/BI,EAAAA,MAAM,GAAG;AAAA,wBAMH,KAAKC,KANF;AAAA,UAELC,cAFK,eAELA,cAFK;AAAA,UAGLC,OAHK,eAGLA,OAHK;AAAA,UAILC,kBAJK,eAILA,kBAJK;AAAA,UAKLC,mBALK,eAKLA,mBALK;AAQP,WACE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,kBAAkB,EAAED,kBAFtB;AAGE,MAAA,mBAAmB,EAAEC,mBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,cAAc,CAACI,GAAf,CAAmBC,MAAM,IAAI;AAC5B,aACE;AACE,QAAA,GAAG,EAAEA,MAAM,CAACC,GADd;AAEE,QAAA,SAAS,EAAC,qCAFZ;AAGE,QAAA,OAAO,EAAE,MAAML,OAAO,CAACI,MAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,MAAM,CAACE,KALV,CADF;AASD,KAVA,CADH,CALF,CADF;AAqBD;;AAnD8B;;AAA3BV,Q,CACGW,S,GAAY;AACjB;;;;;;;AAOAP,EAAAA,OAAO,EAAEN,SAAS,CAACc,IARF;AASjBT,EAAAA,cAAc,EAAEL,SAAS,CAACe,KATT;AAUjBR,EAAAA,kBAAkB,EAAEP,SAAS,CAACgB,MAVb;AAWjBR,EAAAA,mBAAmB,EAAER,SAAS,CAACgB;AAXd,C;AADfd,Q,CAeGe,Y,GAAe;AACpB;;;AAGAZ,EAAAA,cAAc,EAAE;AAJI,C;AAuCxB,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport StyledDropDown from './styled-component'\n\nclass DropDown extends Component {\n  static propTypes = {\n    /**\n     * onClick: A function which acts as a callback when any record is selected. It\n     * is triggered once a dropdown item is clicked.\n     * matchedRecords: An array of matched records.\n     * dropDownHoverColor: Background color on hover of the dropdown list items.\n     * dropDownBorderColor: Border color of the dropdown.\n     */\n    onClick: PropTypes.func,\n    matchedRecords: PropTypes.array,\n    dropDownHoverColor: PropTypes.string,\n    dropDownBorderColor: PropTypes.string,\n  }\n\n  static defaultProps = {\n    /**\n     * Set matchedRecords prop as an empty array in case it's not passed.\n     */\n    matchedRecords: [],\n  }\n\n  render() {\n    const {\n      matchedRecords,\n      onClick,\n      dropDownHoverColor,\n      dropDownBorderColor,\n    } = this.props\n\n    return (\n      <StyledDropDown\n        className=\"react-search-box-dropdown\"\n        dropDownHoverColor={dropDownHoverColor}\n        dropDownBorderColor={dropDownBorderColor}\n      >\n        <ul>\n          {matchedRecords.map(record => {\n            return (\n              <li\n                key={record.key}\n                className=\"react-search-box-dropdown-list-item\"\n                onClick={() => onClick(record)}\n              >\n                {record.value}\n              </li>\n            )\n          })}\n        </ul>\n      </StyledDropDown>\n    )\n  }\n}\n\nexport default DropDown\n"]},"metadata":{},"sourceType":"module"}