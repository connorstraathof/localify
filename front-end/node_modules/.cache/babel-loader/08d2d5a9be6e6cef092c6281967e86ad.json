{"ast":null,"code":"var _jsxFileName = \"/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/ShopsAll/Drinks/Drink.js\";\nimport React from 'react';\nimport NotFound from '../../Tools/NotFound/NotFound';\nimport { RichText } from 'prismic-reactjs';\nimport Text from '../../Slices/Text';\nimport Quote from '../../Slices/Quote';\nimport ImageCaption from '../../Slices/ImageCaption';\nimport { Helmet } from 'react-helmet';\nimport Loader from '../../Tools/Loaders/Loader/Loader';\nimport '../../../Styles/Generic/Generic.css'; // Declare your component\n\nexport default class Drink extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doc: null,\n      notFound: false\n    };\n\n    if (props.prismicCtx) {\n      this.fetchPage(props);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar(); // We fetch the page only after props have changed and PrismicCtx is no longer null\n\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props);\n    }\n  }\n\n  fetchPage(props) {\n    // We are using the function to get a document by its uid\n    return props.prismicCtx.api.getByUID('drinks_post', props.match.params.uid, {}, (err, doc) => {\n      if (doc) {\n        // We put the retrieved content in the state as a doc variable\n        this.setState({\n          doc\n        });\n      } else {\n        // We changed the state to display error not found if no matched doc\n        this.setState({\n          notFound: !doc\n        });\n      }\n    });\n  }\n\n  logo() {\n    const avatar = {\n      backgroundImage: 'url(' + this.state.doc.data.logo.url + ')'\n    };\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"blog-avatar\",\n      style: avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n  renderSliceZone(sliceZone) {\n    return sliceZone.map((slice, index) => {\n      switch (slice.slice_type) {\n        case 'image_with_caption':\n          return React.createElement(ImageCaption, {\n            slice: slice,\n            key: 'slice-' + index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n\n        case 'quote':\n          return React.createElement(Quote, {\n            slice: slice,\n            key: 'slice-' + index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          });\n\n        case 'text':\n          return React.createElement(Text, {\n            slice: slice,\n            key: 'slice-' + index,\n            prismicCtx: this.props.prismicCtx,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n\n        default:\n          return null;\n      }\n    });\n  }\n\n  render() {\n    if (this.state.doc) {\n      let titled = this.state.doc.data.title.length !== 0;\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"shop__logo-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"shop__logo-box__br\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"shop-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"outer-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"shop__back\",\n        href: \"/drinks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"BACK\")), React.createElement(\"div\", {\n        className: \"info__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"generic__post__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, titled ? RichText.asText(this.state.doc.data.title) : 'Untitled'), React.createElement(\"div\", {\n        className: \"generic__post__one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, titled ? RichText.asText(this.state.doc.data.long_description) : 'Untitled'), React.createElement(\"div\", {\n        id: \"generic__post__address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"generic__address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"ADDRESS:\"), titled ? RichText.asText(this.state.doc.data.address) : 'Untitled'), React.createElement(\"div\", {\n        className: \"generic__post__one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, titled ? RichText.asText(this.state.doc.data.contact) : 'Untitled')))), this.renderSliceZone(this.state.doc.data.body));\n    } else if (this.state.notFound) {\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/connorstraathof/Desktop/new-projects/localify/front-end/src/Components/ShopsAll/Drinks/Drink.js"],"names":["React","NotFound","RichText","Text","Quote","ImageCaption","Helmet","Loader","Drink","Component","constructor","props","state","doc","notFound","prismicCtx","fetchPage","componentDidUpdate","prevProps","toolbar","api","getByUID","match","params","uid","err","setState","logo","avatar","backgroundImage","data","url","renderSliceZone","sliceZone","map","slice","index","slice_type","render","titled","title","length","asText","long_description","address","contact","body"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NotFound from '../../Tools/NotFound/NotFound'\nimport { RichText } from 'prismic-reactjs'\nimport Text from '../../Slices/Text'\nimport Quote from '../../Slices/Quote'\nimport ImageCaption from '../../Slices/ImageCaption'\nimport { Helmet } from 'react-helmet'\nimport Loader from '../../Tools/Loaders/Loader/Loader'\nimport '../../../Styles/Generic/Generic.css'\n\n// Declare your component\nexport default class Drink extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      doc: null,\n      notFound: false\n    }\n    if (props.prismicCtx) {\n      this.fetchPage(props)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.prismicCtx.toolbar()\n    // We fetch the page only after props have changed and PrismicCtx is no longer null\n    if (!prevProps.prismicCtx) {\n      this.fetchPage(this.props)\n    }\n  }\n\n  fetchPage(props) {\n    // We are using the function to get a document by its uid\n    return props.prismicCtx.api.getByUID('drinks_post', props.match.params.uid, {}, (err, doc) => {\n      if (doc) {\n        // We put the retrieved content in the state as a doc variable\n        this.setState({ doc })\n      } else {\n        // We changed the state to display error not found if no matched doc\n        this.setState({ notFound: !doc })\n      }\n    })\n  }\n\n  logo() {\n    const avatar = { backgroundImage: 'url(' + this.state.doc.data.logo.url + ')' }\n    return (\n      <div className='home'>\n        <div className='blog-avatar' style={avatar} />\n      </div>\n    )\n  }\n\n  renderSliceZone(sliceZone) {\n    return sliceZone.map((slice, index) => {\n      switch (slice.slice_type) {\n        case 'image_with_caption':\n          return <ImageCaption slice={slice} key={'slice-' + index} />\n        case 'quote':\n          return <Quote slice={slice} key={'slice-' + index} />\n        case 'text':\n          return <Text slice={slice} key={'slice-' + index} prismicCtx={this.props.prismicCtx} />\n        default:\n          return null\n      }\n    })\n  }\n\n  render() {\n    if (this.state.doc) {\n      let titled = this.state.doc.data.title.length !== 0\n      return (\n        <div className='main'>\n          <div className='shop__logo-box'>\n            <div className='shop__logo-box__br'/>\n{/* {this.logo()} */}\n<div/>\n          </div>\n          <div className='shop-container'>\n          <div className='outer-container'>\n              <div className='back'>\n                <a id='shop__back' href='/drinks'>BACK</a>\n              </div>\n              <div className='info__container'>\n                <div id='generic__post__title'>\n                  {titled ? RichText.asText(this.state.doc.data.title) : 'Untitled'}\n                </div>\n                <div className='generic__post__one'>\n                  {titled ? RichText.asText(this.state.doc.data.long_description) : 'Untitled'}\n                </div>\n                <div id='generic__post__address'>\n                  <div className='generic__address'>ADDRESS:</div>\n                  {titled ? RichText.asText(this.state.doc.data.address) : 'Untitled'}\n                </div>\n                <div className='generic__post__one'>\n                  {titled ? RichText.asText(this.state.doc.data.contact) : 'Untitled'}\n                </div>\n              </div>\n          </div>\n          </div>\n          {/* Go through the slices of the post and render the appropiate one */}\n          {this.renderSliceZone(this.state.doc.data.body)}\n        </div>\n      )\n    } else if (this.state.notFound) {\n      return <NotFound />\n    }\n    return <Loader />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}